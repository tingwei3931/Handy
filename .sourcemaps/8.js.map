{"version":3,"sources":["../../src/pages/login/login.module.ts","../../src/pages/login/login.ts"],"names":[],"mappings":"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","file":"8.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { IonicPageModule } from 'ionic-angular';\n\nimport { LoginPage } from './login';\n\n@NgModule({\n  declarations: [\n    LoginPage,\n  ],\n  imports: [\n    IonicPageModule.forChild(LoginPage),\n    TranslateModule.forChild()\n  ],\n  exports: [\n    LoginPage\n  ]\n})\nexport class LoginPageModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/login/login.module.ts","import { Component } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\nimport { IonicPage, NavController, ToastController, ModalController, NavParams} from 'ionic-angular';\nimport { User } from '../../providers/providers';\nimport { MainPage } from '../pages';\nimport { SignupPage } from '../pages';\nimport { ForgotPasswordPage } from '../pages';\n\n@IonicPage()\n@Component({\n  selector: 'page-login',\n  templateUrl: 'login.html',\n  providers: [User]\n})\nexport class LoginPage {\n  // The account fields for the login form.\n  // If you're using the username field with or without email, make\n  // sure to add it to the type\n  account: { email: string, password: string } = {\n    email: \"\",\n    password: \"\"\n  };\n  private usersList: any;\n  private users = [];\n  // Our translated text strings\n  private loginErrorString: string;\n\n  constructor(public navCtrl: NavController,\n    public user: User,\n    public toastCtrl: ToastController,\n    public translateService: TranslateService,\n    public modalCtrl: ModalController,\n    public navParams: NavParams ) {\n    this.listUsers();\n    this.translateService.get('LOGIN_ERROR').subscribe((value) => {\n      this.loginErrorString = value;\n    })\n  }\n\n  //tutorial for API request\n  listUsers(){\n    this.user.loadUser(10)\n    .then(data => {\n      this.usersList = data; //copies the data gathered to userslist\n      console.log(data);\n    })\n  }\n  //Open a new modal to register\n  submitRegister(){\n    let registerModal = this.modalCtrl.create(SignupPage);\n    registerModal.present();\n  }\n\n  //redirect to reset pass\n  redirectResetPass(){\n    this.navCtrl.push(ForgotPasswordPage, {\n      notice: \"UNDER CONSTRUCTION\"\n    });\n  }\n\n  // Attempt to login in through our User service\n  doLogin() {\n    this.user.login(this.account).subscribe((resp) => {\n      this.navCtrl.push(MainPage);\n    }, (err) => {\n      this.navCtrl.push(MainPage);\n      // Unable to log in\n      let toast = this.toastCtrl.create({\n        message: this.loginErrorString,\n        duration: 3000,\n        position: 'top'\n      });\n      toast.present();\n    });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/login/login.ts"],"sourceRoot":""}